@model CineLogic.Business.Programmation.SeanceViewModel

@section css {
    @Styles.Render("~/Content/fullcalendarcss")
    @Styles.Render("~/Content/bootstrapdatepickercss")
    @Styles.Render("~/Content/programmation.css")
}

@{
    ViewBag.Title = "Index";
}

<!-- Icone animé qui est affiché lors que la page fait une operation ajax-->
<div class="loading float-right">
    <div class="loader">
        <i class="fas fa-film"></i>
    </div>
</div>

<div id="sf-animation" class="float-right">

</div>

<h4>Selectionner le cinéma et salle:</h4>

<div class="d-flex">
    <select class="form-control mr-2" id="cinema-select"></select>
    <select class="form-control mr-2" id="salle-select"></select>
</div>

<hr />

@if (ViewBag.UnsavedChanges != null)
{
    <div class="alert alert-danger unsaved-alert" id="unsaved-alert">
        <div class="row">
            <div class="col-md-10  d-flex justify-content-start align-items-center">
                <h5><i class="fas fa-exclamation-triangle"></i> Vous avez des changements non-enregistrés.</h5>
            </div>
            <div class="col-md-2 d-flex justify-content-end align-items-center">
                @*@Html.ActionLink("Annuler", "Annuler", "Seances", new { @class = "btn btn-danger mr-2" })
                    @Html.ActionLink("Enregistrer", "Save", "Seances", new { @class = "btn btn-success" })*@
                <button class="btn btn-danger mr-2 annuler-changes" id="">Annuler</button>
                <button class="btn btn-success save-changes" id="">Enregistrer</button>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-danger collapse unsaved-alert" id="unsaved-alert">
        <div class="row">
            <div class="col-md-10  d-flex justify-content-start align-items-center">
                <h5><i class="fas fa-exclamation-triangle"></i> Vous avez des changements non-enregistrés.</h5>
            </div>
            <div class="col-md-2 d-flex justify-content-end align-items-center">
                @*@Html.ActionLink("Annuler", "Annuler", "Seances", new { @class = "btn btn-danger mr-2" })
                    @Html.ActionLink("Enregistrer", "Save", "Seances", new { @class = "btn btn-success" })*@
                <button class="btn btn-danger mr-2 annuler-changes" id="">Annuler</button>
                <button class="btn btn-success save-changes" id="">Enregistrer</button>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-4">
        <!-- Ajout d'une séance -->
        <div class="d-flex flex-column border p-4">
            <h5>Ajouter une séance</h5>

            <!-- Datepicker-->
            <div class="my-3 d-flex justify-content-center">
                <div id="date-picker">
                </div>
            </div>


            <!-- Message d'erreur - Date -->
            <div id="alert-date" class="alert alert-danger collapse">
                Vous devez selectionner une date!
            </div>

            <!-- Bouton pour changer la date de l'horaire-->
            <div class="form-group">
                <button class="btn btn-outline-primary float-right" id="datechanger">Aller à la date <i class="fas fa-chevron-right"></i></button>
            </div>

            <!-- Selectionner les heures-->
            <div class="form-group">
                <label>@Html.DisplayNameFor(model => model.HeureDebut)</label>
                <div class="d-flex">
                    <input name="debut-hours" class="time-in form-control mr-2" type="number" placeholder="HH" min="0" max="23" />
                    <input name="debut-mins" class="time-in form-control" type="number" placeholder="MM" min="0" max="59" />
                </div>
            </div>
            <div class="form-group">
                <label>@Html.DisplayNameFor(model => model.HeureFin)</label>
                <div class="d-flex">
                    <input name="fin-hours" class="time-in form-control mr-2" type="number" placeholder="HH" min="0" max="23" />
                    <input name="fin-mins" class="time-in form-control" type="number" placeholder="MM" min="0" max="59" />
                </div>
            </div>

            <!-- Input pour titre de la séance-->
            <div class="form-group">
                <label>@Html.DisplayNameFor(model => model.Titre)</label>
                <input name="titre" class="form-control" type="text" maxlength="20" />
            </div>

            <!-- Alert pour les messages d'erreur-->

            <div class="alert alert-danger alert-dismissible collapse" id="alert-seance-container">
                <h3>Erreur!</h3>
                <p id="alert-seance"></p>
                <button type="button" class="close" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <!-- Alert de succès-->
            <div class="alert alert-success alert-dismissible collapse" id="success-seance-container">
                <h3>Succès!</h3>
                <p>La séance à été ajouté avec succès!</p>
                <button type="button" class="close" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="form-group">
                <button id="create-seance" class="btn btn-outline-success">Créer</button>
            </div>
        </div>

    </div>
    <!-- Affichage des séances dans un calandrier -->
    <div class="col-md-8">
        <div id='calendar' class="p-4 border">
        </div>
    </div>

    <!-- Modal confirmation -->
    <div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Création d'une séance</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Affichage des détails sur la séance-->
                    <p>
                        Vous allez créer cette séance:
                    </p>
                    <dl>
                        <dt>
                            Salle
                        </dt>
                        <dd id="conf-salle"></dd>
                        <dt>
                            Titre
                        </dt>
                        <dd id="conf-titre"></dd>
                        <dt>
                            Heure de début
                        </dt>
                        <dd id="conf-debut"></dd>
                        <dt>
                            Heure de fin
                        </dt>
                        <dd id="conf-fin"></dd>
                    </dl>
                </div>
                <div class="modal-footer">
                    <div class="loading float-left">
                        <div class="loader-small">
                            <i class="fas fa-film"></i>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Fermer</button>
                    <button type="button" class="btn btn-outline-success" id="btn-confirmed">Continuer</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="mt-3">
    @if (ViewBag.UnsavedChanges != null)
    {
        <div class="alert alert-danger unsaved-alert" id="unsaved-alert">
            <div class="row">
                <div class="col-md-10  d-flex justify-content-start align-items-center">
                    <h5><i class="fas fa-exclamation-triangle"></i> Vous avez des changements non-enregistrés.</h5>
                </div>
                <div class="col-md-2 d-flex justify-content-end align-items-center">
                    @*@Html.ActionLink("Annuler", "Annuler", "Seances", new { @class = "btn btn-danger mr-2" })
                        @Html.ActionLink("Enregistrer", "Save", "Seances", new { @class = "btn btn-success" })*@
                    <button class="btn btn-danger mr-2 save-changes" id="">Annuler</button>
                    <button class="btn btn-success save-changes" id="">Enregistrer</button>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-danger collapse unsaved-alert" id="unsaved-alert">
            <div class="row">
                <div class="col-md-10  d-flex justify-content-start align-items-center">
                    <h5><i class="fas fa-exclamation-triangle"></i> Vous avez des changements non-enregistrés.</h5>
                </div>
                <div class="col-md-2 d-flex justify-content-end align-items-center">
                    @*@Html.ActionLink("Annuler", "Annuler", "Seances", new { @class = "btn btn-danger mr-2" })
                        @Html.ActionLink("Enregistrer", "Save", "Seances", new { @class = "btn btn-success" })*@
                    <button class="btn btn-danger mr-2 annuler-changes" id="">Annuler</button>
                    <button class="btn btn-success save-changes" id="">Enregistrer</button>
                </div>
            </div>
        </div>
    }
</div>


@section scripts {

    <script type="text/javascript">
        //================================================================================
        // VARIABLES À PASSER AUX SCRIPTS
        //================================================================================

        //  Ces variables doivent être initialisé ici parce que les fonction Razor ne peut pas être appelé dans les autres fichiers.

        //  Noms d'affichage pour les attributs d'une séance.
        //  Utilisé pour l'affichage des erreurs.
        var dictVarNames = {
            "seance.Titre": "@Html.DisplayNameFor(model => model.Titre)",
            "seance.HeureDebut": "@Html.DisplayNameFor(model => model.HeureDebut)",
            "seance.HeureFin": "@Html.DisplayNameFor(model => model.HeureFin)",
            "seance.SalleID": "@Html.DisplayNameFor(model => model.SalleID)"
        };

        var dictURLs = {
            "GetSeances": "@Url.Action("Seances")",
            "EditSeance": "@Url.Action("Edit")",
            "CreateSeance": "@Url.Action("Create")",
            "GetCinemas": "@Url.Action("Cinemas", "Cinemas")",
            "GetSalles": "@Url.Action("Salles", "Salles")",
            "UpdateSeanceTimes": "@Url.Action("UpdateTimes")",
            "DeleteSeanceAjax": "@Url.Action("DeleteAjax")",
            "AdjustSeanceTimes": "@Url.Action("AdjustTimes")"
        }
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $(".save-changes").on('click', function () {
                console.log("save changes clicked");
                var jqxhr = $.get("@Url.Action("Save")", function (data) {
                    $(".unsaved-alert").hide();
                    refreshEvents();
                });
            });

            $(".annuler-changes").on('click', function () {
                $.get("@Url.Action("Annuler")", function (data) {
                    $(".unsaved-alert").hide();
                    refreshEvents();
                });
            });
        });
    </script>

    @Scripts.Render("~/Content/fullcalendarjs")
    @Scripts.Render("~/Content/bootstrapdatepickerjs")
    @Scripts.Render("~/Content/Programmation")
}

