@model CineLogic.Models.UserViewModel

@{
    ViewBag.Title = "Éditer";
}

<h2>Éditer</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Login)
        @Html.HiddenFor(model => model.Type)

        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Login, new { htmlAttributes = new { @readonly = "true", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomComplet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomComplet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomComplet, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Session[CineLogic.Models.Libraries.SessionTypes.login].Equals(CineLogic.Models.Libraries.UserTypes.admin))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Type, new List<SelectListItem>{
                            new SelectListItem() {Text = "Admin", Value=CineLogic.Models.Libraries.UserTypes.admin},
                            new SelectListItem() {Text = "Prog", Value=CineLogic.Models.Libraries.UserTypes.prog}}, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        { <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-outline-success" />
            </div>
        </div>
    </div>
}
    @if (Session[CineLogic.Models.Libraries.SessionTypes.login].Equals(CineLogic.Models.Libraries.UserTypes.admin))
     {
     <div>
        @Html.ActionLink("Liste des usagers", "Index")
     </div>
     }
    else
    {
      <div>
        @Html.ActionLink("Home", "Prog", "Home")
      </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
