@model CineLogic.Models.Contenu

@{
    ViewBag.Title = "Edit";
}

<h2 class="border-left border-bottom border-info m-4 p-4">Edition un film</h2>

<div class="d-flex justify-content-sm-between">
    <div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Titre)

                <div class="d-flex justify-content-around">
                    <div class="">
                        <div class="form-group mr-1">
                            @*@Html.LabelFor(model => model.Titre, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="card-title titre">
                                @Html.EditorFor(model => model.Titre, new { htmlAttributes = new { @readonly = "true", @class = "form-control p-4" } })
                                @Html.ValidationMessageFor(model => model.Titre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="d-flex justify-content-around EDS">
                            <div class="form-group ">
                                @Html.LabelFor(model => model.Annee, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-12 p-1">
                                    @Html.EditorFor(model => model.Annee, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Annee, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group EDS">
                                @Html.LabelFor(model => model.RuntimeMins, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-12 p-1">
                                    @Html.EditorFor(model => model.RuntimeMins, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RuntimeMins, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-around EDS">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-12 p-1">
                                    @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Votes, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-12 p-1">
                                    @Html.EditorFor(model => model.Votes, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Votes, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-around EDS">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Revenue, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-12 p-1">
                                    @Html.EditorFor(model => model.Revenue, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Revenue, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MetaScore, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-12 p-1">
                                    @Html.EditorFor(model => model.MetaScore, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MetaScore, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group m-5">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Mettre à jour" class="btn btn-outline-success align-content-center" />
                            </div>
                        </div>
                    </div>

                    <div class="">
                        <div class="list-group">
                            <div class="list-group-item list-group-item-action p-2">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="description">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="">
                        <div class="border border-info p-4 ml-2 mt-0  details scrollable">
                            <h6>Acteurs</h6>
                            <table class="table">
                                @foreach (var item in Model.Acteurs)
                                {
                                    <tr>
                                        <td class="EDS">
                                            @Html.DisplayFor(modelItem => item.Nom)
                                        </td>
                                        <td class="EDS">
                                            @Html.ActionLink("Editer", "Edit", "Acteurs", new { id = item.Nom }, null) |
                                            @Html.ActionLink("Détails", "Details", "Acteurs", new { id = item.Nom }, null) |
                                            @Html.ActionLink("Supprimer", "SupprimerActeur", "Contenus", new { ActeurId = item.Nom, contenuId = Model.Titre }  , null)
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>

                        <div class="border border-info p-4 m-2 details scrollable">
                            <h6>Directeurs</h6>
                            <table class="table">
                                @foreach (var item in Model.Directeurs)
                                {
                                    <tr>
                                        <td class="EDS">
                                            @Html.DisplayFor(modelItem => item.Nom)
                                        </td>
                                        <td  class="EDS">
                                            @Html.ActionLink("Editer", "Edit", "Directeurs", new { id = item.Nom }, null) |
                                            @Html.ActionLink("Détails", "Details", "Directeurs", new { id = item.Nom }, null) |
                                            @Html.ActionLink("Supprimer", "SupprimerDirecteur", "Contenus", new { DirecteurId = item.Nom, contenuId = Model.Titre }, null)
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                        <div class="border border-info p-4 m-2 details scrollable">
                            <h6>Genres</h6>
                            <table class="table">
                                @foreach (var item in Model.Genres)
                                {
                                    <tr>
                                        <td class="EDS">
                                            @Html.DisplayFor(modelItem => item.Nom)
                                        </td>
                                        <td  class="EDS">
                                            @Html.ActionLink("Editer", "Edit", "Directeurs", new { id = item.Nom }, null) |
                                            @Html.ActionLink("Détails", "Details", "Directeurs", new { id = item.Nom }, null) |
                                            @Html.ActionLink("Supprimer", "SupprimerGenre", "Contenus", new { GenreId = item.Nom, contenuId = Model.Titre }, null)
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>

                    </div>
                </div>
            </div>
        }
    </div>
    <div class="">
        <div class="d-flex flex-column">
            <div class="border-left border-bottom border-info m-sm-1 p-lg-3">
                @using (Html.BeginForm("AjouterActeur", "Contenus", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="d-flex justify-content-between">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="">
                            <label class="EDS">Ajouter un acteur</label>
                            <div class="">
                                <input name="nomActeur" class="form-control EDS" />
                            </div>
                            @Html.HiddenFor(model => model.Titre)
                            <div class="m-1 d-flex justify-content-center">
                                <input type="submit" value="Ajouter" class="btn btn-outline-info EDS" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="border-left border-bottom border-info m-sm-1 p-lg-3">
                @using (Html.BeginForm("AjouterDirecteur", "Contenus", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="">
                            <label class="EDS">Ajouter un direteur</label>
                            <div class="">
                                <input name="nomDirecteur" class="form-control EDS" />
                            </div>
                            @Html.HiddenFor(model => model.Titre)
                            <div class="m-2 d-flex justify-content-center">
                                <input type="submit" value="Ajouter" class="btn btn-outline-info EDS" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="border-left border-bottom border-info m-sm-1 p-lg-3">
                @using (Html.BeginForm("AjouterGenre", "Contenus", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="">
                            <label class="EDS">Ajouter un genre</label>
                            <div class="">
                                <input name="nomGenre" class="form-control EDS" />
                            </div>
                            @Html.HiddenFor(model => model.Titre)
                            <div class="m-1 d-flex justify-content-center">
                                <input type="submit" value="Ajouter" class="btn btn-outline-info EDS" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

</div>


@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@



<div>
    @Html.ActionLink("Index des films", "Index")
</div>
